package jelly

import (
	fmt "fmt"
	"github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type TimeRange struct {
	StartTime            *Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"startTime,omitempty"`
	EndTime              *Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"endTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TimeRange) Reset()         { *m = TimeRange{} }
func (m *TimeRange) String() string { return proto.CompactTextString(m) }
func (*TimeRange) ProtoMessage()    {}
func (*TimeRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_c9ef75b1651eb41d, []int{0}
}
func (m *TimeRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeRange.Unmarshal(m, b)
}
func (m *TimeRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeRange.Marshal(b, m, deterministic)
}
func (m *TimeRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeRange.Merge(m, src)
}
func (m *TimeRange) XXX_Size() int {
	return xxx_messageInfo_TimeRange.Size(m)
}
func (m *TimeRange) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeRange.DiscardUnknown(m)
}

var xxx_messageInfo_TimeRange proto.InternalMessageInfo

func (m *TimeRange) GetStartTime() *Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *TimeRange) GetEndTime() *Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

var fileDescriptor_c9ef75b1651eb41d = []byte{
	// 234 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0xca, 0xcd, 0xcf, 0xca,
	0xd7, 0x4f, 0xce, 0x2f, 0x4a, 0xd5, 0x2f, 0xc9, 0xcc, 0x4d, 0x8d, 0x2f, 0x4a, 0xcc, 0x4b, 0x4f,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x04, 0xc9, 0xe9, 0x81, 0xe4, 0xa4, 0x24, 0x51,
	0x95, 0x15, 0x97, 0x24, 0xe6, 0x16, 0x40, 0x54, 0x29, 0x15, 0x72, 0x71, 0x86, 0x64, 0xe6, 0xa6,
	0x06, 0x81, 0x34, 0x0a, 0x19, 0x73, 0x71, 0x15, 0x97, 0x24, 0x16, 0x95, 0xc4, 0x83, 0x54, 0x49,
	0x30, 0x2a, 0x30, 0x6a, 0x70, 0x1b, 0x89, 0xe8, 0xc1, 0xcd, 0xd1, 0x0b, 0x81, 0x69, 0x0e, 0xe2,
	0x04, 0xab, 0x03, 0xf1, 0x85, 0xf4, 0xb9, 0x38, 0x52, 0xf3, 0x52, 0x20, 0x5a, 0x98, 0xf0, 0x68,
	0x61, 0x4f, 0xcd, 0x4b, 0x01, 0xf1, 0x9c, 0x5a, 0x19, 0xb9, 0xf8, 0x73, 0x12, 0xf3, 0xd2, 0x21,
	0xaa, 0xc0, 0xce, 0x70, 0xe2, 0x83, 0x3b, 0x22, 0x00, 0xc4, 0x0f, 0x60, 0x8c, 0xb2, 0x4e, 0xcf,
	0x2c, 0xd1, 0x4b, 0xcc, 0xcc, 0x4d, 0x2c, 0xd0, 0xcb, 0xcc, 0xd7, 0xcf, 0xc9, 0x4f, 0x4e, 0x2c,
	0xc9, 0xcc, 0xcf, 0xd3, 0x4f, 0x4f, 0xcd, 0x03, 0xeb, 0x80, 0x8b, 0xe8, 0x26, 0x16, 0x64, 0x16,
	0xeb, 0xc3, 0x3d, 0x68, 0x0d, 0x22, 0x7e, 0x30, 0x32, 0x2e, 0x62, 0x62, 0xf6, 0x0d, 0x70, 0x5a,
	0xc5, 0x24, 0xe9, 0x0b, 0xb2, 0x04, 0x6c, 0xa8, 0x5e, 0x78, 0x6a, 0x4e, 0x8e, 0x77, 0x5e, 0x7e,
	0x79, 0x5e, 0x48, 0x65, 0x41, 0x6a, 0x71, 0x12, 0x1b, 0xd8, 0x20, 0x63, 0x40, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xcf, 0xba, 0xfb, 0xc1, 0x45, 0x01, 0x00, 0x00,
}
